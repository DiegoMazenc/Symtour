{% extends 'base.html.twig' %}
{% block body %}

	<div class="user-contain px-5 lg:px-28 py-5 bg-slate-100">
		{{ form_start(searchForm) }}
		<div class="relative">
			{{ form_widget(searchForm.search, {
				'attr': {
					'class': 'bg-white',  
				}
			}) }}
			<svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewbox="0 0 24 24" class="absolute right-2 top-3"><path fill="black" d="m20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8a7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0a1 1 0 0 0 0-1.42M5 11a6 6 0 1 1 6 6a6 6 0 0 1-6-6"/></svg>
		</div>
		{{ form_widget(searchForm.submit, {
				'attr': {
					'class': 'hidden',  
				}
			}) }}
		{{ form_end(searchForm) }}
		<hr class="mt-3">

		{{ form_start(filterForm) }}
		<div class="flex-responsive  justify-between py-3">
			<div class="form-search">
				<select id="{{ filterForm.musicCategory.vars.id }}" name="{{ filterForm.musicCategory.vars.full_name }}" class="m-0 w-full bg-white">
					<option value="" disabled selected>
						<p class="text-gray-500">Genre Musical</p>
					</option>

					{% for music_category in music_categories %}
						<option value="{{ music_category.category }}">{{ music_category.category }}</option>
					{% endfor %}
				</select>
			</div>
			<div class="form-search">
				{{ form_widget(filterForm.date, {
						'attr': {
							'class' : 'm-0 w-full bg-white'									
						}
					}) }}
			</div>
			<div class="relative form-search">
				{{ form_widget(filterForm.city, {
						'attr': {
							'class' : 'm-0 w-full bg-white',
							'placeholder' : "Ville",										
						}
					}) }}
				<svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewbox="0 0 256 256" class="absolute right-2 top-3"><path fill="currentColor" d="M128 64a40 40 0 1 0 40 40a40 40 0 0 0-40-40m0 64a24 24 0 1 1 24-24a24 24 0 0 1-24 24m0-112a88.1 88.1 0 0 0-88 88c0 31.4 14.51 64.68 42 96.25a254.19 254.19 0 0 0 41.45 38.3a8 8 0 0 0 9.18 0a254.19 254.19 0 0 0 41.37-38.3c27.45-31.57 42-64.85 42-96.25a88.1 88.1 0 0 0-88-88m0 206c-16.53-13-72-60.75-72-118a72 72 0 0 1 144 0c0 57.23-55.47 105-72 118"/></svg>

			</div>
			{{ form_widget(filterForm._token) }}
			<button type="submit" class=" btn-search ">Appliquer</button>
		</div>
		{{ form_end(filterForm, {render_rest: false}) }}

		<hr>

		<div class="card-container">

			{% for hall in halls %}
				<div class="card-result" data-aos="fade-up">
					<a href="{{ path('app_hall_show', {'id': hall.id}) }}">
						<h4 class="bg-slate-700 text-white p-2 rounded-t-md pl-32 pt-4 pb-1 flex justify-between items-center">
							<span class="font-bold">{{ hall.name }}</span>

							{% set eventsValidate = 0 %}


							{% for event in hall.events %}
								{% if event.status == 1 %}
									{% set eventsValidate = eventsValidate + 1 %}
								{% endif %}
							{% endfor %}
							<span class="text-sm flex items-center">
								{{ eventsValidate }}
							

								<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewbox="0 0 24 24" class="ml-1"><path fill="white" d="M14.5 18q-1.05 0-1.775-.725T12 15.5q0-1.05.725-1.775T14.5 13q1.05 0 1.775.725T17 15.5q0 1.05-.725 1.775T14.5 18M5 22q-.825 0-1.412-.587T3 20V6q0-.825.588-1.412T5 4h1V2h2v2h8V2h2v2h1q.825 0 1.413.588T21 6v14q0 .825-.587 1.413T19 22zm0-2h14V10H5z"/></svg>
							</span>


						</h4>

						<div class=" img-hall-search">
							<img src="{{ hall.logo }}" alt="{{ hall.name }}">
						</div>
					</a>
					<div class="pl-32  flex justify-between">
						<div>
						<p class="flex items-center py-1">
							<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewbox="0 0 256 256" class="mr-2"><path fill="currentColor" d="M128 16a88.1 88.1 0 0 0-88 88c0 75.3 80 132.17 83.41 134.55a8 8 0 0 0 9.18 0C136 236.17 216 179.3 216 104a88.1 88.1 0 0 0-88-88m0 56a32 32 0 1 1-32 32a32 32 0 0 1 32-32"/></svg>
							{{ hall.hallinfo.city }}
							{% if hall.hallinfo.zipCode != "" %}
								({{ hall.hallinfo.zipCode }})
							{% endif %}
						</p>
						<p class="flex items-center py-1">
							<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewbox="0 0 24 24" class="mr-2"><path fill="currentColor" d="M6.27 2.289a2.936 2.936 0 0 0-2.159 2.035A37.876 37.876 0 0 0 4.1 9.842c.045 0 .491-.086.992-.188L6 9.467l.023-2.334c.027-2.711.016-2.652.584-2.938L6.8 4.1H12c5.737 0 5.316-.019 5.64.256c.324.275.308.2.334 2.776L18 9.467l.91.187c.5.1.947.187.992.188a37.876 37.876 0 0 0-.01-5.518a2.927 2.927 0 0 0-2.177-2.037c-.551-.132-10.9-.13-11.442 0m2.515 4.2l-.466 1.862L8 9.637l-.507.475l-.507.474l-2.486.465l-2.485.466v3.754A31.9 31.9 0 0 0 2.071 19l2.415-.9c1.3-.487 2.4-.893 2.45-.9c.069-.014.22.1.577.438l.487.45l.322 1.283l.466 1.861l.145.579h6.14l.145-.579l.466-1.861l.316-1.283l.484-.455c.357-.337.508-.452.577-.438c.051.009 1.154.415 2.45.9l2.418.905a31.9 31.9 0 0 0 .058-3.732v-3.751l-2.487-.466l-2.485-.465l-.507-.474L16 9.637l-.322-1.283l-.466-1.862l-.145-.579H8.93l-.145.579m4.2 5.182c2.541.608 3.471 3.2 1.83 5.091c-2.094 2.419-6.41 1.1-6.428-1.964c-.012-2.149 2.253-3.689 4.6-3.127"/></svg>
							{% if hall.structure != "" %}
								{{ hall.structure }}
							{% else %}
								Non précisé
							{% endif %}
						</p>
						</div>
						<div class=" text-right p-1 text-sm">
						{% set eventsResp = 0 %}
							{% for event in hall.events %}
								{% if event.status != 3  %}
									{% set eventsResp = eventsResp + 1 %}
								{% endif %}
							{% endfor %}
							{% if hall.events|length > 0 %}
									{% set rateResp = eventsResp * 100 / hall.events|length %}
									<p>Réponse</p>
									<p class="">
									{{ rateResp | round(2) }}%
									{# <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" class="ml-1"><path fill="currentColor" d="M15.5 12c2.5 0 4.5 2 4.5 4.5c0 .88-.25 1.71-.69 2.4l3.08 3.1L21 23.39l-3.12-3.07c-.69.43-1.51.68-2.38.68c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5m0 2a2.5 2.5 0 0 0-2.5 2.5a2.5 2.5 0 0 0 2.5 2.5a2.5 2.5 0 0 0 2.5-2.5a2.5 2.5 0 0 0-2.5-2.5M19 8H5v11h4.5c.31.75.76 1.42 1.31 2H5a2 2 0 0 1-2-2V5c0-1.11.89-2 2-2h1V1h2v2h8V1h2v2h1a2 2 0 0 1 2 2v8.03c-.5-.81-1.2-1.49-2-2.03z"/></svg> #}
									</p>
								{% endif %}
						</div>
					</div>
					<div class="list-category flex p-3 mb-6 justify-evenly">
						{% set displayedBands = [] %}

						{% for bandMember in app.user.profil.bandMembers %}
							{% set musicCategory = bandMember.band.musicCategory.category %}
							{% set isMusicAccepted = hall.musicCategory|filter(category => category.category == musicCategory)|length > 0 %}

							{% if isMusicAccepted %}
								{% set bandName = bandMember.band.name %}
								{% if bandName not in displayedBands %}
									<p class="text-green-500 mx-2">{{ bandName }}
										✓</p>
									{% set displayedBands = displayedBands|merge([bandName]) %}
								{% endif %}
							{% endif %}
						{% endfor %}
					</div>
					<a href="{{ path('app_search_booking', {'id': hall.id, 'date': filterForm.date.vars.value}) }}">
						<h4 class="bg-slate-400 hover:bg-teal-500 text-white rounded-b-md text-center py-1 absolute bottom-0 w-full">Réserver</h4>
					</a>
				</div>
			{% endfor %}
		</div>
	</div>
</div>

<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
<script>
	AOS.init();
</script>
<script>



	document.addEventListener('DOMContentLoaded', function () {
const halls = {{ halls|json_encode|raw }};
const resultContain = document.querySelector('.result-contain');

// Fonction pour mettre à jour les salles affichées en fonction des filtres
function updateHalls() { // Obtenez les valeurs des filtres sélectionnés
const musicCategory = document.getElementById('filter_musicCategory').value;
const date = document.getElementById('filter_date').value;
const city = document.getElementById('filter_city').value;
const searchTerm = document.getElementById('searchForm_search').value.toLowerCase();

// Filtrer les salles en fonction des valeurs sélectionnées
const filteredHalls = halls.filter(hall => {
const isMusicCategoryMatch = ! musicCategory || hall.musicCategory.includes(musicCategory);
const isDateMatch = ! date || (hall.events && hall.events.some(event => event.date !== date));
const isCityMatch = ! city || (hall.hallinfo && hall.hallinfo.city.toLowerCase().includes(city.toLowerCase()));
const isSearchMatch = ! searchTerm || hall.name.toLowerCase().includes(searchTerm);

return isMusicCategoryMatch && isDateMatch && isCityMatch && isSearchMatch;
});

// Mettre à jour les salles affichées
updateResultCards(filteredHalls);
}

// Fonction pour mettre à jour les cartes de résultat
function updateResultCards(filteredHalls) { // Effacer les cartes de résultat existantes
resultContain.innerHTML = '';

// Ajouter des cartes de résultat pour chaque salle filtrée
filteredHalls.forEach(hall => { // Créer et ajouter le HTML de la carte de résultat
const cardHtml = `<div class="card-result w-full my-5 bg-white p-3 rounded-lg shadow-md hover:shadow-lg duration-300">...</div>`;
resultContain.insertAdjacentHTML('beforeend', cardHtml);
});
}

// Attacher des écouteurs d'événements aux éléments de filtre
document.getElementById('filter_musicCategory').addEventListener('change', updateHalls);
document.getElementById('filter_date').addEventListener('change', updateHalls);
document.getElementById('filter_city').addEventListener('input', updateHalls);
document.getElementById('searchForm_search').addEventListener('input', updateHalls);
});
</script>{% endblock %}
