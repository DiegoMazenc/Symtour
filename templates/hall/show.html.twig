{% extends 'base.html.twig' %}

{% block title %}Hall
{% endblock %}

{% block body %}


	<div class="user-contain px-28 py-5 bg bg-slate-100">
		<div class="header-user flex justify-evenly">
			<div class="pic_profil">
				<img src="{{ hall.logo }}" alt="" class="user-img">
			</div>
			<div class="user-infos">
				<h3 class="font-bold ">{{ hall.name }}</h3>
			</div>

		</div>
		<div class="tab_project">
			<div class="my-10">
				<div class="flex ">
					<div class=" calendar bg-slate-700  text-white p-5 rounded-md">
						<div id="calendar-holder"></div>
					</div>

					<div class="event-list-db bg-white rounded-md shadow-md ">
						<h4 class="bg-slate-700 text-white p-2 rounded-t-md">Mes demandes de date</h4>
						<div class="p-3">
							{% for event in hall.events %}
								{% if event.status == 3 %}
									<div class="cardAdminProfil flex justify-between ">
										<p>{{ event.date|date('d-m-Y')  }}</p>
										<a href="{{ path('app_band_show', {'id': event.band.id}) }}">{{ event.band.name }}</a>
										<p>{{ event.band.musicCategory.category }}
											/
											{{ event.band.defineStyle }}</p>

										<div>
											<form action="{{ path('app_hall_show', {'id': hall.id}) }}" method="post">
												<input type="hidden" name="action" value="validate">
												<input type="hidden" name="bandId" value="{{ event.band.id }}">
												<input type="hidden" name="event_id" value="{{ event.id }}">
												<button type="submit" class="validate-button px-2 py-1 rounded-lg bg-emerald-300 text-white hover:bg-emerald-500">Valider</button>
											</form>
											<form action="{{ path('app_hall_show', {'id': hall.id}) }}" method="post">
												<input type="hidden" name="action" value="reject">
												<input type="hidden" name="bandId" value="{{ event.band.id }}">
												<input type="hidden" name="event_id" value="{{ event.id }}">
												<button type="submit" class="reject-button px-2 py-1 rounded-lg bg-red-300 text-white hover:bg-red-600">Refuser</button>
											</form>
										</div>
									</div>
									<hr class="my-3">
								{% endif %}
							{% endfor %}
							<a href="{{ path('app_event_new') }}" class="text-slate-400 hover:text-blue-500 ">
								<button class="bg-slate-700 rounded-full px-2 pb-1 mr-4 text-white font-bold hover:bg-blue-500">+</button>Organiser un nouvel Event</a>
						</div>
					</div>
				</div>
				<div class="event-list-db bg-white rounded-md shadow-md mt-3 ">
					<h4 class="bg-slate-700 text-white p-2 rounded-t-md">Mes prochains events
					</h4>
					<div class="p-3">
						{% for event in hall.events %}
							{% if event.status == 1 %}
								<div class="cardAdminProfil flex justify-between ">
									<p>{{ event.date|date('d-m-Y')  }}</p>
									<p>{{ event.band.name }}</p>

									<div>
										<form action="{{ path('app_hall_show', {'id': hall.id}) }}" method="post">
											<input type="hidden" name="action" value="validate">
											<input type="hidden" name="event_id" value="{{ event.id }}">
											<button type="submit" class="validate-button px-2 py-1 rounded-lg bg-red-300 text-white hover:bg-red-600">Annuler</button>
										</form>
									</div>
								</div>
								<hr class="my-3">
							{% endif %}
						{% endfor %}
						<a href="{{ path('app_event_new') }}" class="text-slate-400 hover:text-blue-500 ">
							<button class="bg-slate-700 rounded-full px-2 pb-1 mr-4 text-white font-bold hover:bg-blue-500">+</button>Organiser un nouvel Event</a>
					</div>
				</div>
			</div>
			<div class="my-10">
				<div class="event-list-db bg-white rounded-md shadow-md mt-3 ">
					<h4 class="bg-slate-700 text-white p-2 rounded-t-md">Membres
					</h4>
					<div class="p-3">

						{% for member in hall.hallMembers %}
							<div class="cardAdminProfil flex justify-between items-center">
								<div class="flex items-center">
									<div class=" img-member-db">
										<img src="{{ member.profile.picture }}" alt="{{ member.profile.pseudo }}">
									</div>
									<div>
										<a href="{{ path('app_profil_show', {'id': member.profile.id}) }}" class="text-blue-400 font-semibold">{{ member.profile.pseudo}}</a>
										<p>{{ member.role.roleName}}</p>
									</div>
								</div>
								<p>{{ member.dateCreate|date('d-m-Y')  }}</p>
							</div>
							<hr class="my-3">
						{% endfor %}
						<a href="{{ path('app_hall_member_new') }}" class="text-slate-400 hover:text-blue-500 ">
							<button class="bg-slate-700 rounded-full px-2 pb-1 mr-4 text-white font-bold hover:bg-blue-500">+</button>Ajouter un nouveau membre</a>

					</div>
				</div>

			</div>
		</div>

	</div>


{% endblock %}


{% block javascripts %}
	<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.5/index.global.min.js" integrity="sha256-dHUNnePy81fXq4D/wfu7cPsEIP7zl6MvLb84jtZf+UY=" crossorigin="anonymous"></script>

	<script>
		document.addEventListener('DOMContentLoaded', () => {
var calendarEl = document.getElementById('calendar-holder');

var calendar = new FullCalendar.Calendar(calendarEl, {

defaultView: 'dayGridMonth',
editable: true,
eventSources: [
{
url: "/fc-load-events",
method: "POST",
extraParams: {
filters: JSON.stringify({})
},
failure: () => { // alert("There was an error while fetching FullCalendar!");
}
},
],
headerToolbar: {
start: 'prev,next today',
center: 'title',
end: 'dayGridMonth,timeGridWeek,timeGridDay'
},
timeZone: 'UTC'
});
calendar.render();
});
	</script>


	<script>
		document.addEventListener('DOMContentLoaded', function () {
const validateButtons = document.querySelectorAll('.validate-button');
const rejectButtons = document.querySelectorAll('.reject-button');

validateButtons.forEach(button => {
button.addEventListener('click', function () {
const eventId = this.getAttribute('data-event-id');
updateEventStatus(eventId, 1); // Mettre à jour le statut à 1 (Validé)
});
});

rejectButtons.forEach(button => {
button.addEventListener('click', function () {
const eventId = this.getAttribute('data-event-id');
updateEventStatus(eventId, 2); // Mettre à jour le statut à 2 (Refusé)
});
});

function updateEventStatus(eventId, newStatus) {
// Envoyer une requête AJAX au serveur pour mettre à jour le statut
// Utilisez votre chemin de contrôleur et les données nécessaires
const url = `/update-event-status/${eventId}/${newStatus}`;

// Vous pouvez utiliser fetch ou une bibliothèque comme Axios pour envoyer la requête
fetch(url, {
method: 'POST',
headers: {
'Content-Type': 'application/json',
// Ajoutez d'autres en-têtes si nécessaire
},
// Ajoutez un corps de requête si nécessaire
}).then(response => { // Traitez la réponse du serveur si nécessaire
console.log(response);
}).catch(error => {
console.error('Erreur lors de la mise à jour du statut de l\'événement :', error);
});
}
});


	</script>

{% endblock %}
