{% extends 'base.html.twig' %}

{% block title %}Band
{% endblock %}

{% block body %}

	<div class="user-contain   px-28 py-5 bg bg-slate-100">
		<div class="header-user flex justify-evenly">
			<div class="pic_profil">
				<img src="{{ band.logo }}" alt="" class="user-img">
			</div>
			<div class="user-infos">
				<h3 class="font-bold ">{{ band.name }}</h3>
				<h3 class="mb-8">{{ band.musicCategory.category }}
					(
					{{ band.defineStyle }}
					)</h3>

			</div>

		</div>

		{# dashboard #}
		<div class="tab_project">
			<div class="my-10">
				<div class="flex ">
					<div class=" calendar bg-slate-700  text-white p-5 rounded-md">
						{# <div id="calendar-holder"></div> #}
					</div>

					<div class="event-list-db bg-white rounded-md shadow-md ">
						<h4 class="bg-slate-700 text-white p-2 rounded-t-md">Mes dernières demandes
						</h4>
						<div class="p-3">
							{% for bandEvent in band.bandEvents|reverse|slice(0, 5) %}
								<div class="cardAdminProfil flex justify-between ">
									<p>{{ bandEvent.event.date|date('d-m-Y')  }}</p>
									<a href="{{ path('app_hall_show', {'id': bandEvent.event.hall.id}) }}">{{ bandEvent.event.hall.name }}</a>
									<p>
										{% if bandEvent.status == "guest" %}
											<div>
												<form action="{{ path('app_band_show', {'id': band.id}) }}" method="post">
													<input type="hidden" name="action" value="validate">
													<input type="hidden" name="event_id" value="{{ bandEvent.id }}">
													<input type="hidden" name="hall_id" value="{{ bandEvent.event.hall.id }}">
													<button type="submit" class="validate-button px-2 py-1 rounded-lg bg-emerald-300 text-white hover:bg-emerald-500">Valider</button>
												</form>
												<form action="{{ path('app_band_show', {'id': band.id}) }}" method="post">
													<input type="hidden" name="action" value="reject">
													<input type="hidden" name="event_id" value="{{ bandEvent.id }}">
													<input type="hidden" name="hall_id" value="{{ bandEvent.event.hall.id }}">
													<button type="submit" class="reject-button px-2 py-1 rounded-lg bg-red-300 text-white hover:bg-red-600">Refuser</button>
												</form>
											</div>
										
										{% elseif bandEvent.event.status == 1 %}
											<span style="color: green;">✓ Validé</span>
										{% elseif bandEvent.event.status == 2 %}
											<span style="color: red;">x Refusé</span>
											
										{% elseif bandEvent.event.status == 3 %}
											<span style="color: gray;">... En cours</span>

										{% else %}
											{{ bandEvent.event.status }}
										{% endif %}
									</p>
								</div><hr class="my-3">

							{% endfor %}
							<a href="{{ path('app_search') }}" class="text-slate-400 hover:text-blue-500 ">
								<button class="bg-slate-700 rounded-full px-2 pb-1 mr-4 text-white font-bold hover:bg-blue-500">+</button>Organiser un nouvel Event</a>
						</div>
					</div>
				</div>
			</div>
			
				<div class="flex justify-between">
					<div class="event-confirm-db bg-white rounded-md shadow-md mt-3 ">
						<div class="flex justify-between item-align bg-slate-700 relative rounded-t-md">
							<h4 class=" text-white p-2 ">Mes prochains events</h4>
							<div class="flex absolute right-2 top-2">
								<div id="arrow-left" class="arrow-left text-white rounded-full bg-slate-500 font-bold  px-2 mx-1">&#10094;</div>
								<div id="arrow-right" class="arrow-right text-white rounded-full bg-slate-500 font-bold  px-2 mx-1">&#10095;</div>
							</div>
						</div>
						{% set count = 0 %}
						{% for events in eventCome %}
							{% if events.status == 1 %}
								{% set count = count + 1 %}
							{% endif %}
						{% endfor %}
						{% set widthPercentage = count * 100 %}


						<div class="event-confirm-db-container">
								{% if count == 0 %}
									<div class="card-event-db bg-white ">
										<p class="text-center p-3">Aucun évènement prévus </p>
									</div>
								{% endif %}
							<div class=" event-confirm-db-content" style="width: {{ widthPercentage }}%">
								{% for events in eventCome %}
									{% if events.status == 1 %}

										<div class="card-event-db bg-white ">

											<div class=" bg-slate-500 text-white p-2  items-center flex relative">
												<div class="img-project-db border-2 border-green-500 ">
													<img src="{{ events.hall.logo }}" alt="">
												</div>
												<div class=" bg-green-500 text-white px-2 py-1 rounded-full absolute text-xs top-1 left-10">
													✓
												</div>
												<div>
													<p>{{ events.hall.name }} ({{ events.hall.hallInfo.city }})</p>
													<p>{{ events.date|format_datetime(locale='fr',pattern="EEEE dd MMMM YYYY") }}</p>
												</div>
											</div>
											<div class="plateau">
												{% for bandEvent in events.bandEvents|slice(0, 3) %}
													{% if bandEvent.status == "validate" %}

														<div class="clic">
															<div class=" flex justify-between items-center">
																<div class="flex p-2 items-center relative">
																	<div class="img-project-db border-2 border-green-500 ">
																		<img src="{{ bandEvent.band.logo }}" alt="">
																	</div>
																
																	<div>
																		<a href="{{ path('app_band_show', {'id': bandEvent.band.id}) }}" class="text-blue-400 font-semibold">{{ bandEvent.band.name }}</a>
																		<p>{{ bandEvent.band.musicCategory.category }}
																			/
																			{{ bandEvent.band.defineStyle }}</p>
																	</div>
																</div>
															</div>
															<div class="open">
																{% for member in bandEvent.band.bandMembers %}
																	<div class="flex justify-between list-member-event">
																		<div class="flex">
																			<div class="img-profil-event border-2 border-slate-500">
																				<img src="{{ member.profil.picture }}" alt="" class="w-5">

																			</div>
																			<p>{{ member.profil.pseudo }}
																			</p>
																		</div>
																		<p>{{ member.role.roleName }}</p>
																	</div>
																{% endfor %}
															</div>
														</div>
														<hr>
													{% endif %}
												{% endfor %}
											</div>
										</div>
									{% endif %}
								{% endfor %}
							</div>
						</div>
					</div>
					<div class="event-confirm-db bg-white rounded-md shadow-md mt-3 ">
						<h4 class="bg-slate-700 text-white p-2 rounded-t-md">Mon dernier events
						</h4>
						<div class=" flex justify-between">
							{% for events in eventPast %}
								{% if events.status == 1 %}
									<div class="card-event-db bg-white ">
										<div class="flex bg-slate-500 text-white p-2  items-center">
											<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewbox="0 0 24 	24" class="mr-3"><path fill="white" d="M14.5 18q-1.05 0-1.775-.725T12 15.5q0-1.	05.725-1.775T14.5 13q1.05 0 1.775.725T17 15.5q0 1.05-.725 1.775T14.5 18M5 22q-.	825 0-1.412-.587T3 20V6q0-.825.588-1.412T5 4h1V2h2v2h8V2h2v2h1q.825 0 1.413.	588T21 6v14q0 .825-.587 1.413T19 22zm0-2h14V10H5z"/></svg>
											<p>{{ events.date|format_datetime(locale='fr',pattern="EEEE dd MMMM YYYY") }}</p>
										</div>
										<div class="plateau">
											{% for bandEvent in events.bandEvents|slice(0, 1) %}
												{% if bandEvent.status == "validate" %}

													<div class="clic">
														<div class=" flex justify-between items-center">
															<div class="flex p-2 items-center relative">
																<div class="img-project-db border-2 border-green-500 ">
																	<img src="{{ bandEvent.band.logo }}" alt="">
																</div>
																<div class=" bg-green-500 text-white px-2 py-1 rounded-full absolute text-xs top-1 left-10">
																	✓
																</div>
																<div>
																	<p class="text-blue-400 font-semibold">{{ bandEvent.band.name }}</p>
																	<p>{{ bandEvent.band.musicCategory.category }}
																		/
																		{{ bandEvent.band.defineStyle }}</p>
																</div>
															</div>
														</div>
														<div class="open">
															{% for member in bandEvent.band.bandMembers %}
																<div class="flex justify-between list-member-event">
																	<div class="flex">
																		<div class="img-profil-event border-2 border-slate-500">
																			<img src="{{ member.profil.picture }}" alt="" class="w-5">

																		</div>
																		<p>{{ member.profil.pseudo }}
																		</p>
																	</div>
																	<p>{{ member.role.roleName }}</p>
																</div>
															{% endfor %}
														</div>
													</div>
													<hr>
												{% endif %}
											{% endfor %}
										</div>
									</div>
								{% endif %}
							{% endfor %}
						</div>
					</div>
				</div>
			</div>
			<div class="my-10">

				<h4>Membres</h4>
				<div class="bg-white rounded-lg shadow-md p-3">

					{% for member in band.bandMembers %}
						<div class="cardAdminProfil flex justify-between ">
							{# <p>{{ bandMember.band.logo}}</p> #}
							{# <p>{{ member.profil.id }}</p> #}
								<p>
							{{ member.role.roleName}}
							</p>
								<p>
							{{ member.profil.pseudo}}
						</p>
						</div>
					<hr class="my-3"> {% endfor %}
					<a href="{{ path('app_band_new') }}" class="text-slate-400 hover:text-blue-500 ">
						<button class="bg-slate-700 rounded-full px-2 pb-1 mr-4 text-white font-bold hover:bg-blue-500">+</button>Ajouter un nouveau membre</a>
				</div>

			</div>
		</div>

	</div>
	
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const container = document.querySelector('.event-confirm-db-container');
            const content = document.querySelector('.event-confirm-db-content');
            const arrowLeft = document.getElementById('arrow-left');
            const arrowRight = document.getElementById('arrow-right');

            // Initialisation de la position à 0
            let currentPosition = 0;

            arrowLeft.addEventListener('click', function () {
                // Décrémente la position
                currentPosition -= 100;
                updatePosition();
            });

            arrowRight.addEventListener('click', function () {
                // Incrémente la position
                currentPosition += 100;
                updatePosition();
            });

            arrowLeft.addEventListener('mouseover', function () {
                // Change le curseur au survol
                arrowLeft.style.cursor = 'pointer';
            });

            arrowRight.addEventListener('mouseover', function () {
                // Change le curseur au survol
                arrowRight.style.cursor = 'pointer';
            });

            arrowLeft.addEventListener('mouseout', function () {
                // Rétablit le curseur par défaut
                arrowLeft.style.cursor = 'default';
            });

            arrowRight.addEventListener('mouseout', function () {
                // Rétablit le curseur par défaut
                arrowRight.style.cursor = 'default';
            });

            function updatePosition() {
                // Limite la position pour éviter de dépasser le contenu
                currentPosition = Math.max(0, Math.min(currentPosition, content.scrollWidth - container.clientWidth));
                
                // Ajout d'une transition pour une animation fluide
                content.style.transition = 'left 0.5s ease-in-out';
                content.style.left = `-${currentPosition}%`;

                // Rend la flèche gauche transparente et non cliquable si à la limite gauche
                arrowLeft.style.opacity = currentPosition === 0 ? 0.5 : 1;
                arrowLeft.style.pointerEvents = currentPosition === 0 ? 'none' : 'auto';

                // Rend la flèche droite transparente et non cliquable si à la limite droite
                const count = {{ count }};
                arrowRight.style.opacity = currentPosition >= (count - 1) * 100 ? 0.5 : 1;
                arrowRight.style.pointerEvents = currentPosition >= (count - 1) * 100 ? 'none' : 'auto';

                // Réinitialise la transition après l'animation
                setTimeout(() => {
                    content.style.transition = '';
                }, 500);
            }
        });
    </script>


{% endblock %}

{% block javascripts %}
	<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.5/index.global.min.js" integrity="sha256-dHUNnePy81fXq4D/wfu7cPsEIP7zl6MvLb84jtZf+UY=" crossorigin="anonymous"></script>

	<script>
		document.addEventListener('DOMContentLoaded', () => {
var calendarEl = document.getElementById('calendar-holder');

var calendar = new FullCalendar.Calendar(calendarEl, {
defaultView: 'dayGridMonth',
editable: true,
eventSources: [
{
url: "/fc-load-events",
method: "POST",
extraParams: {
filters: JSON.stringify({})
},
failure: () => { // alert("There was an error while fetching FullCalendar!");
}
},
],
headerToolbar: {
start: 'prev,next today',
center: 'title',
end: 'dayGridMonth,timeGridWeek,timeGridDay'
},
timeZone: 'UTC'
});
calendar.render();
});
	</script>

{% endblock %}
